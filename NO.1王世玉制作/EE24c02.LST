C51 COMPILER V9.01   EE24C02                                                               11/30/2013 10:23:33 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE EE24C02
OBJECT MODULE PLACED IN EE24c02.OBJ
COMPILER INVOKED BY: D:\软件\keil\C51\BIN\C51.EXE EE24c02.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*-----------------------------------------------
   2            名称：IIC协议 EEPROM24c02
   3            论坛：www.doflye.net
   4            编写：shifang
   5            修改：无
   6            内容：此程序用于检测EEPROM性能，测试方法如下：写入24c02一些数据，然后在内存中清除这些数据，
   7                  掉电后主内存将失去这些信息，然后从24c02中调入这些数据。看是否与写入的相同。
   8                          函数是采用软件延时的方法产生SCL脉冲,固对高晶振频率要作 一定的修改....(本例是1us机器
   9                          周期,即晶振频率要小于12MHZ)
  10          ------------------------------------------------*/  
  11            
  12                        
  13          #include <reg52.h>          //头文件的包含
  14          #include <intrins.h>
  15          #include "1602.h"
  16          
  17          #define  _Nop()  _nop_()        //定义空指令
  18          
  19                                                        
  20          sbit SDA=P2^1;            //模拟I2C数据传送位
  21          sbit SCL=P2^0;            //模拟I2C时钟控制位
  22          
  23                                    
  24          bit ack;                      //应答标志位
  25             
  26          
  27          void DelayUs2x(unsigned char t);//函数声明 
  28          
  29          
  30          /*------------------------------------------------
  31           uS延时函数，含有输入参数 unsigned char t，无返回值
  32           unsigned char 是定义无符号字符变量，其值的范围是
  33           0~255 这里使用晶振12M，精确延时请使用汇编,大致延时
  34           长度如下 T=tx2+5 uS 
  35          ------------------------------------------------*/
  36          void DelayUs2x(unsigned char t)
  37          {   
  38   1       while(--t);
  39   1      }
  40          /*------------------------------------------------
  41           mS延时函数，含有输入参数 unsigned char t，无返回值
  42           unsigned char 是定义无符号字符变量，其值的范围是
  43           0~255 这里使用晶振12M，精确延时请使用汇编
  44          ------------------------------------------------*/
  45          
  46          
  47          /*------------------------------------------------
  48                              启动总线
  49          ------------------------------------------------*/
  50          void Start_I2c()
  51          {
  52   1        SDA=1;   //发送起始条件的数据信号
  53   1        _Nop();
  54   1        SCL=1;
  55   1        _Nop();    //起始条件建立时间大于4.7us,延时
C51 COMPILER V9.01   EE24C02                                                               11/30/2013 10:23:33 PAGE 2   

  56   1        _Nop();
  57   1        _Nop();
  58   1        _Nop();
  59   1        _Nop();    
  60   1        SDA=0;     //发送起始信号
  61   1        _Nop();    //起始条件锁定时间大于4μ
  62   1        _Nop();
  63   1        _Nop();
  64   1        _Nop();
  65   1        _Nop();       
  66   1        SCL=0;    //钳住I2C总线，准备发送或接收数据
  67   1        _Nop();
  68   1        _Nop();
  69   1      }
  70          /*------------------------------------------------
  71                              结束总线
  72          ------------------------------------------------*/
  73          void Stop_I2c()
  74          {
  75   1        SDA=0;    //发送结束条件的数据信号
  76   1        _Nop();   //发送结束条件的时钟信号
  77   1        SCL=1;    //结束条件建立时间大于4μ
  78   1        _Nop();
  79   1        _Nop();
  80   1        _Nop();
  81   1        _Nop();
  82   1        _Nop();
  83   1        SDA=1;    //发送I2C总线结束信号
  84   1        _Nop();
  85   1        _Nop();
  86   1        _Nop();
  87   1        _Nop();
  88   1      }
  89          
  90          
  91          
  92          
  93          /*----------------------------------------------------------------
  94                           字节数据传送函数               
  95          函数原型: void  SendByte(unsigned char c);
  96          功能:  将数据c发送出去,可以是地址,也可以是数据,发完后等待应答,并对
  97               此状态位进行操作.(不应答或非应答都使ack=0 假)     
  98               发送数据正常，ack=1; ack=0表示被控器无应答或损坏。
  99          ------------------------------------------------------------------*/
 100          void  SendByte(unsigned char c)
 101          {
 102   1       unsigned char BitCnt;
 103   1       
 104   1       for(BitCnt=0;BitCnt<8;BitCnt++)  //要传送的数据长度为8位
 105   1          {
 106   2           if((c<<BitCnt)&0x80)SDA=1;   //判断发送位
 107   2             else  SDA=0;                
 108   2           _Nop();
 109   2           SCL=1;               //置时钟线为高，通知被控器开始接收数据位
 110   2            _Nop(); 
 111   2            _Nop();             //保证时钟高电平周期大于4μ
 112   2            _Nop();
 113   2            _Nop();
 114   2            _Nop();         
 115   2           SCL=0; 
 116   2          }
 117   1          
C51 COMPILER V9.01   EE24C02                                                               11/30/2013 10:23:33 PAGE 3   

 118   1          _Nop();
 119   1          _Nop();
 120   1          SDA=1;               //8位发送完后释放数据线，准备接收应答位
 121   1          _Nop();
 122   1          _Nop();   
 123   1          SCL=1;
 124   1          _Nop();
 125   1          _Nop();
 126   1          _Nop();
 127   1          if(SDA==1)ack=0;     
 128   1             else ack=1;        //判断是否接收到应答信号
 129   1          SCL=0;
 130   1          _Nop();
 131   1          _Nop();
 132   1      }
 133          
 134          
 135          
 136          
 137          
 138          
 139          
 140          /*----------------------------------------------------------------
 141                           字节数据传送函数               
 142          函数原型: unsigned char  RcvByte();
 143          功能:  用来接收从器件传来的数据,并判断总线错误(不发应答信号)，
 144               发完后请用应答函数。  
 145          ------------------------------------------------------------------*/    
 146          unsigned char  RcvByte()
 147          {
 148   1        unsigned char retc;
 149   1        unsigned char BitCnt;
 150   1        
 151   1        retc=0; 
 152   1        SDA=1;             //置数据线为输入方式
 153   1        for(BitCnt=0;BitCnt<8;BitCnt++)
 154   1            {
 155   2              _Nop();           
 156   2              SCL=0;       //置时钟线为低，准备接收数据位
 157   2              _Nop();
 158   2              _Nop();      //时钟低电平周期大于4.7us
 159   2              _Nop();
 160   2              _Nop();
 161   2              _Nop();
 162   2              SCL=1;       //置时钟线为高使数据线上数据有效
 163   2              _Nop();
 164   2              _Nop();
 165   2              retc=retc<<1;
 166   2              if(SDA==1)retc=retc+1; //读数据位,接收的数据位放入retc中
 167   2              _Nop();
 168   2              _Nop(); 
 169   2            }
 170   1        SCL=0;    
 171   1        _Nop();
 172   1        _Nop();
 173   1        return(retc);
 174   1      }
 175          
 176          
 177          
 178          /*----------------------------------------------------------------
 179                               应答子函数
C51 COMPILER V9.01   EE24C02                                                               11/30/2013 10:23:33 PAGE 4   

 180          原型:  void Ack_I2c(void);
 181           
 182          ----------------------------------------------------------------*/
 183          void Ack_I2c(void)
 184          {
 185   1        
 186   1        SDA=0;     
 187   1        _Nop();
 188   1        _Nop();
 189   1        _Nop();      
 190   1        SCL=1;
 191   1        _Nop();
 192   1        _Nop();              //时钟低电平周期大于4μ
 193   1        _Nop();
 194   1        _Nop();
 195   1        _Nop();  
 196   1        SCL=0;               //清时钟线，钳住I2C总线以便继续接收
 197   1        _Nop();
 198   1        _Nop();    
 199   1      }
 200          /*----------------------------------------------------------------
 201                               非应答子函数
 202          原型:  void NoAck_I2c(void);
 203           
 204          ----------------------------------------------------------------*/
 205          void NoAck_I2c(void)
 206          {
 207   1        
 208   1        SDA=1;
 209   1        _Nop();
 210   1        _Nop();
 211   1        _Nop();      
 212   1        SCL=1;
 213   1        _Nop();
 214   1        _Nop();              //时钟低电平周期大于4μ
 215   1        _Nop();
 216   1        _Nop();
 217   1        _Nop();  
 218   1        SCL=0;                //清时钟线，钳住I2C总线以便继续接收
 219   1        _Nop();
 220   1        _Nop();    
 221   1      }
 222          
 223          
 224          
 225          
 226          
 227          
 228          /*----------------------------------------------------------------
 229                              向无子地址器件发送字节数据函数               
 230          函数原型: bit  ISendByte(unsigned char sla,ucahr c);  
 231          功能:     从启动总线到发送地址，数据，结束总线的全过程,从器件地址sla.
 232                     如果返回1表示操作成功，否则操作有误。
 233          注意：    使用前必须已结束总线。
 234          ----------------------------------------------------------------*/
 235          /*bit ISendByte(unsigned char sla,unsigned char c)
 236          {
 237             Start_I2c();               //启动总线
 238             SendByte(sla);             //发送器件地址
 239               if(ack==0)return(0);
 240             SendByte(c);               //发送数据
 241               if(ack==0)return(0);
C51 COMPILER V9.01   EE24C02                                                               11/30/2013 10:23:33 PAGE 5   

 242            Stop_I2c();                 //结束总线
 243            return(1);
 244          }
 245          */
 246          
 247          /*----------------------------------------------------------------
 248                              向有子地址器件发送多字节数据函数               
 249          函数原型: bit  ISendStr(unsigned char sla,unsigned char suba,ucahr *s,unsigned char no);  
 250          功能:     从启动总线到发送地址，子地址,数据，结束总线的全过程,从器件
 251                    地址sla，子地址suba，发送内容是s指向的内容，发送no个字节。
 252                     如果返回1表示操作成功，否则操作有误。
 253          注意：    使用前必须已结束总线。
 254          ----------------------------------------------------------------*/
 255          bit ISendStr(unsigned char sla,unsigned char suba,unsigned char *s,unsigned char no)
 256          {
 257   1         unsigned char i;
 258   1      
 259   1         Start_I2c();               //启动总线
 260   1         SendByte(sla);             //发送器件地址
 261   1           if(ack==0)return(0);
 262   1         SendByte(suba);            //发送器件子地址
 263   1           if(ack==0)return(0);
 264   1      
 265   1         for(i=0;i<no;i++)
 266   1          {   
 267   2           SendByte(*s);            //发送数据
 268   2           DelayMs(1);
 269   2             if(ack==0)return(0);
 270   2           s++;
 271   2          } 
 272   1       Stop_I2c();                  //结束总线
 273   1        return(1);
 274   1      }
 275          
 276          /*----------------------------------------------------------------
 277                              向无子地址器件读字节数据函数               
 278          函数原型: bit  IRcvByte(unsigned char sla,ucahr *c);  
 279          功能:     从启动总线到发送地址，读数据，结束总线的全过程,从器件地
 280                    址sla，返回值在c.
 281                     如果返回1表示操作成功，否则操作有误。
 282          注意：    使用前必须已结束总线。
 283          ----------------------------------------------------------------*/
 284          /*bit IRcvByte(unsigned char sla,unsigned char *c)
 285          {
 286             Start_I2c();                //启动总线
 287             SendByte(sla+1);            //发送器件地址
 288               if(ack==0)return(0);
 289             *c=RcvByte();               //读取数据
 290               NoAck_I2c();              //发送非就答位
 291               Stop_I2c();               //结束总线
 292            return(1);
 293          }
 294          
 295          */
 296          /*----------------------------------------------------------------
 297                              向有子地址器件读取多字节数据函数               
 298          函数原型: bit  ISendStr(unsigned char sla,unsigned char suba,ucahr *s,unsigned char no);  
 299          功能:     从启动总线到发送地址，子地址,读数据，结束总线的全过程,从器件
 300                    地址sla，子地址suba，读出的内容放入s指向的存储区，读no个字节。
 301                     如果返回1表示操作成功，否则操作有误。
 302          注意：    使用前必须已结束总线。
 303          ----------------------------------------------------------------*/
C51 COMPILER V9.01   EE24C02                                                               11/30/2013 10:23:33 PAGE 6   

 304          bit IRcvStr(unsigned char sla,unsigned char suba,unsigned char *s,unsigned char no)
 305          {
 306   1         unsigned char i;
 307   1      
 308   1         Start_I2c();               //启动总线
 309   1         SendByte(sla);             //发送器件地址
 310   1           if(ack==0)return(0);
 311   1         SendByte(suba);            //发送器件子地址
 312   1           if(ack==0)return(0);
 313   1      
 314   1         Start_I2c();
 315   1         SendByte(sla+1);
 316   1            if(ack==0)return(0);
 317   1      
 318   1         for(i=0;i<no-1;i++)
 319   1          {   
 320   2           *s=RcvByte();              //发送数据
 321   2            Ack_I2c();                //发送就答位 
 322   2           s++;
 323   2          } 
 324   1         *s=RcvByte();
 325   1          NoAck_I2c();                 //发送非应位
 326   1         Stop_I2c();                    //结束总线
 327   1        return(1);
 328   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    335    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
